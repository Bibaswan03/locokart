import React, { useEffect } from 'react'
import logo from '../Images/LOCOCART.png'
import Link from 'next/link'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { useState} from 'react'
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import Head from 'next/head'

const Login = () => {
const [d, setd] = useState(true)
const router = useRouter();
useEffect(()=>{
  if(localStorage.getItem('token')){
    router.push('/');
    toast.success('You are already Logged in', {
      position: "bottom-center",
      autoClose: 1000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "light",
      });
  }
},[])

  const [email, setemail] = useState("");
  const [password, setpassword] = useState("");

  const handelsubmit= async(e)=>{
    e.preventDefault();
    const data ={email,password}

    let res = await fetch(`${process.env.VERCEL_URL||'http://localhost:3000'}/api/login`,{
      method:'POST',
      headers:{
        'Content-Type':'application/json',
      },
      body:JSON.stringify(data),
    })
    let response  = await res.json()
   
    
  
    setemail('');
 
    setpassword('');
    if(response.success){
      localStorage.setItem('token',response.token)
      toast.success('Yay! Login successful', {
        position: "bottom-center",
        autoClose: 1000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
        });
        setTimeout(() => {
          router.push(`/`)
        }, 1000);

        
    }
    else{
      toast.error(response.error, {
        position: "bottom-center",
        autoClose: 1000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
        });
      
    }
    


  }
  const handelchange =(e) => {
    
    if (e.target.name === "email") {
      setemail(e.target.value);
    }
    
    if (e.target.name === "password") {
      setpassword(e.target.value);
    }

   
    if (email.length > 3 &&password.length > 2) {
      setd(false);
    } else {
      setd(true);
    }
  };
  return (
    <>
    <Head>
        <title>LOCOCART - Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type='png' href="/logo.png" />
      </Head>
    <ToastContainer
        position="bottom-center"
        autoClose={1000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
      />
       <section className="bg-gray-100">
  <div className="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">
    <Link href={'/'}><Image src={logo} height={80} width={140} className='mb-2'></Image></Link>
    <div className="w-full bg-pink-200 rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0">
      <div className="p-6 space-y-4 md:space-y-6 sm:p-8">
        <h1 className="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl ">
          Sign in to your account
        </h1>
        <form className="space-y-4 md:space-y-6" method='POST' onSubmit={handelsubmit}>
          <div>
            <label
              htmlFor="email"
              className="block mb-2 text-sm font-medium text-gray-900 "
            >
              Your email
            </label>
            <input
              value={email}
              onChange={handelchange}
              type="email"
              name="email"
              id="email"
              className="bg-gray-50 border border-gray-300  sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
              placeholder="name@company.com"
              required="true"
            />
          </div>
          <div>
            <label
              htmlFor="password"
              className="block mb-2 text-sm font-medium text-gray-900 "
            >
              Password
            </label>
            <input
              value={password}
              onChange={handelchange}
              type="password"
              name="password"
              id="password"
              placeholder="••••••••"
              className="bg-gray-50 border border-gray-300  sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
              required="true"
            />
          </div>
          <div className="flex items-center justify-between">
            <div className="flex items-start">
              {/* <div className="flex items-center h-5">
                <input
                  id="remember"
                  aria-describedby="remember"
                  type="checkbox"
                  className="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                  required=""
                />
              </div> */}
              {/* <div className="ml-3 text-sm">
                <label
                  htmlFor="remember"
                  className="text-Slate-800 font-bold"
                >
                  Remember me
                </label>
              </div> */}
            </div>
            <a
              href="#"
              className="text-sm font-bold text-primary-600 hover:underline text-primary-500"
            >
              Forgot password?
            </a>
          </div>
          <button
            disabled={d}
            type="submit"
            className="w-full disabled:bg-pink-300 bg-pink-600 p-2.5 rounded-md text-white font-semibold hover:bg-pink-400 hover:text-black"
          >
            Sign in
          </button>
          <p className='text-sm text-pink-800'>
          Don't have an account yet ?<span className='text-slate-800 font-bold'><Link href={'/Register'}> Sign up</Link></span>
          </p>
        
        </form>
      </div>
    </div>
  </div>
</section>

    </>
  )
}

export default Login